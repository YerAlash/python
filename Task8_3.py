# 3. Создайте собственный класс-исключение, который должен проверять содержимое
# списка на наличие только чисел. Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например,
# команду “stop”. При этом скрипт завершается, сформированный список выводится
# на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только
# числа и строки. При вводе пользователем очередного элемента необходимо
# реализовать проверку типа элемента и вносить его в список, только если введено
# число. Класс-исключение должен не позволить пользователю ввести текст
# (не число) и отобразить соответствующее сообщение. При этом работа скрипта
# не должна завершаться.


class MyStrErr(Exception):
    def __init__(self, text):
        self.text = text


num_list = []
print("Введите числа, разделенные пробелом (для выхода: stop)")
is_stop = False
while not is_stop:
    text = input().split()
    for el in text:
        if el == 'stop':
            is_stop = True
            break
        else:
            try:
                if el.isdigit() or (el[0] == '-' and el[1:].isdigit())\
                        or (el.replace('.', '').isdigit()):
                    num_list.append(el)
                else:
                    raise MyStrErr(f"{el} - не цифра!")
            except MyStrErr as err:
                print(err)
print(f"Список введенных чисел: {num_list}")
